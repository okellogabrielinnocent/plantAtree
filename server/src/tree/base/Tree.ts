/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { User } from "../../user/base/User";
import {
  ValidateNested,
  IsOptional,
  IsNumber,
  IsDate,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { Campaign } from "../../campaign/base/Campaign";
import { TreeCondition } from "../../treeCondition/base/TreeCondition";
import { TreeType } from "../../treeType/base/TreeType";
@ObjectType()
class Tree {
  @ApiProperty({
    required: false,
    type: () => [User],
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  adaptors?: Array<User>;

  @ApiProperty({
    required: false,
    type: () => Campaign,
  })
  @ValidateNested()
  @Type(() => Campaign)
  @IsOptional()
  campaign?: Campaign | null;

  @ApiProperty({
    required: false,
    type: () => TreeCondition,
  })
  @ValidateNested()
  @Type(() => TreeCondition)
  @IsOptional()
  condition?: TreeCondition | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  cost!: number | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: () => [User],
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  plantedBy?: Array<User>;

  @ApiProperty({
    required: true,
    type: () => TreeType,
  })
  @ValidateNested()
  @Type(() => TreeType)
  treeType?: TreeType;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { Tree };
