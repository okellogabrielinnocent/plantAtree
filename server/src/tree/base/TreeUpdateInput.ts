/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { UserUpdateManyWithoutTreesInput } from "./UserUpdateManyWithoutTreesInput";
import {
  ValidateNested,
  IsOptional,
  IsNumber,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { CampaignWhereUniqueInput } from "../../campaign/base/CampaignWhereUniqueInput";
import { TreeConditionWhereUniqueInput } from "../../treeCondition/base/TreeConditionWhereUniqueInput";
import { TreeTypeWhereUniqueInput } from "../../treeType/base/TreeTypeWhereUniqueInput";
@InputType()
class TreeUpdateInput {
  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutTreesInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutTreesInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutTreesInput, {
    nullable: true,
  })
  adaptors?: UserUpdateManyWithoutTreesInput;

  @ApiProperty({
    required: false,
    type: () => CampaignWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CampaignWhereUniqueInput)
  @IsOptional()
  @Field(() => CampaignWhereUniqueInput, {
    nullable: true,
  })
  campaign?: CampaignWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => TreeConditionWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TreeConditionWhereUniqueInput)
  @IsOptional()
  @Field(() => TreeConditionWhereUniqueInput, {
    nullable: true,
  })
  condition?: TreeConditionWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  cost?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutTreesInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutTreesInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutTreesInput, {
    nullable: true,
  })
  plantedBy?: UserUpdateManyWithoutTreesInput;

  @ApiProperty({
    required: false,
    type: () => TreeTypeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TreeTypeWhereUniqueInput)
  @IsOptional()
  @Field(() => TreeTypeWhereUniqueInput, {
    nullable: true,
  })
  treeType?: TreeTypeWhereUniqueInput;
}
export { TreeUpdateInput };
