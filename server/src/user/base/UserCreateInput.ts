/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CampaignCreateNestedManyWithoutUsersInput } from "./CampaignCreateNestedManyWithoutUsersInput";
import { ValidateNested, IsOptional, IsString, IsJSON } from "class-validator";
import { Type } from "class-transformer";
import { OrganizationCreateNestedManyWithoutUsersInput } from "./OrganizationCreateNestedManyWithoutUsersInput";
import { GraphQLJSONObject } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { TreeCreateNestedManyWithoutUsersInput } from "./TreeCreateNestedManyWithoutUsersInput";
import { TreeWhereUniqueInput } from "../../tree/base/TreeWhereUniqueInput";
@InputType()
class UserCreateInput {
  @ApiProperty({
    required: false,
    type: () => CampaignCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => CampaignCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => CampaignCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  campaignAdapters?: CampaignCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => OrganizationCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => OrganizationCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => OrganizationCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  organizationsCreatedBy?: OrganizationCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => OrganizationCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => OrganizationCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => OrganizationCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  organizationsUser?: OrganizationCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  phoneNumber!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  picture?: string | null;

  @ApiProperty({
    required: true,
  })
  @IsJSON()
  @Field(() => GraphQLJSONObject)
  roles!: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => TreeCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TreeCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TreeCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  treeAdapters?: TreeCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => TreeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TreeWhereUniqueInput)
  @IsOptional()
  @Field(() => TreeWhereUniqueInput, {
    nullable: true,
  })
  treePlantedBy?: TreeWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;
}
export { UserCreateInput };
