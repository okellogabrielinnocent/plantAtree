/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { UserUpdateManyWithoutOrganizationsInput } from "./UserUpdateManyWithoutOrganizationsInput";
import { ValidateNested, IsOptional, IsString, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { ServiceUpdateManyWithoutOrganizationsInput } from "./ServiceUpdateManyWithoutOrganizationsInput";
import { EnumOrganizationTypes } from "./EnumOrganizationTypes";
@InputType()
class OrganizationUpdateInput {
  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutOrganizationsInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutOrganizationsInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutOrganizationsInput, {
    nullable: true,
  })
  contactPerson?: UserUpdateManyWithoutOrganizationsInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  createdBy?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  organizationEmail?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  organizationPhoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => ServiceUpdateManyWithoutOrganizationsInput,
  })
  @ValidateNested()
  @Type(() => ServiceUpdateManyWithoutOrganizationsInput)
  @IsOptional()
  @Field(() => ServiceUpdateManyWithoutOrganizationsInput, {
    nullable: true,
  })
  services?: ServiceUpdateManyWithoutOrganizationsInput;

  @ApiProperty({
    required: false,
    enum: EnumOrganizationTypes,
    isArray: true,
  })
  @IsEnum(EnumOrganizationTypes, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumOrganizationTypes], {
    nullable: true,
  })
  types?: Array<"Nursery" | "Organization">;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  webSite?: string | null;
}
export { OrganizationUpdateInput };
